# This is a basic workflow to help you get started with Actions

name: Release

on:
  workflow_dispatch:
  repository_dispatch:
    types: [new-version]  
  push:    
    paths:
      - '.github/workflows/build.yml'
      - 'version.txt'
      - 'Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Prepare 
      if: success()
      id: prepare
      run: |
        echo ::set-output name=version::$(cat version.txt)
        echo ::set-output name=docker_platforms::linux/amd64,linux/arm64
        echo ::set-output name=docker_image::docker.io/${{ secrets.DOCKER_USERNAME }}/nifi
        echo ::set-output name=hash::${GITHUB_SHA}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all      
      
    - name: Set up Docker Buildx      
      uses: docker/setup-buildx-action@v1.1.1
          
    - name: Log into registry
      if: success()
      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Buildx
      if: success() && !contains(steps.prepare.outputs.version, 'master')
      run: |
        VERSION=$(echo "${{ steps.prepare.outputs.version }}" | sed -e 's/^v//' | sed -e 's/-.*$//')
        docker buildx build \
          --output type=image,name=${{ steps.prepare.outputs.docker_image }},push=true \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          --tag "${{ steps.prepare.outputs.docker_image }}:$VERSION" \
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.hash }}" \
          --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
          --build-arg NIFI_VERSION="$VERSION" \
          --file Dockerfile .

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        name: Release ${{ steps.prepare.outputs.version }}
        tag: ${{ steps.prepare.outputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        draft: false
